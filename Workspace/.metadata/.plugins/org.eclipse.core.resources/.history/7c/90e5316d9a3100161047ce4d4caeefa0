package com.example.models;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Version;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

@Entity
public class Customer {
	@Id
	@GeneratedValue //COMMENT THIS WHEN USING MONGO, AND MAKE IT A STRING
    private String id;
//	private Long id;  //mysql
	
	@Version
	private long version;
	
	public long getVersion() { 
	    return version; 
	}
	
    private String username, firstName, lastName;
    private int age;
    
    @JsonIgnore
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "customer", cascade = CascadeType.ALL)
	private Set<Cart> savedCarts= new HashSet<Cart>();

    public Customer(){}
    
  public Customer(String id){
//    public Customer(Long id){  //mysql
    	this.id=id;
    }
    
  
//    public Customer(Long id, String username, String firstName, String lastName) {
  @JsonCreator
	public Customer(
			@JsonProperty("id") String id, 
			@JsonProperty("username") String username, 
			@JsonProperty("firstName") String firstName, 
			@JsonProperty("lastName") String lastName, 
			@JsonProperty("age") int age) {
		super();
		this.id = id;
		this.username = username;
		this.firstName = firstName;
		this.lastName = lastName;
		this.age=age;
    }

	public Customer(String firstName, String lastName, String username,int age) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.username=username;
        this.age=age;
    }

    public void addCart(Cart cart){
    	this.savedCarts.add(cart);
    }
    
    @Override
    public String toString() {
        return String.format(
                "Customer[id=%d, username='%s',firstName='%s', lastName='%s', age='%d']",
                id, username, firstName, lastName,age);
    }
    
    @Override
    public boolean equals(Object other){
    	return this.getUsername().equals(((Customer)other).getUsername());
    }

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

//	public Long getId() {
//		return id;
//	}
//
//	public void setId(Long id) {
//		this.id = id;
//	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public Set<Cart> getSavedCarts() {
		return savedCarts;
	}

	public void setSavedCarts(Set<Cart> savedCarts) {
		this.savedCarts = savedCarts;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}
	
	
}